version: '3.7'

services:
  # ReplicaSet 1
  mongodb-rs1:
    image: percona/percona-server-mongodb:8.0-multi
    container_name: mongodb-rs1
    ports:
      - "27001:27001"
    command: mongod --auth --shardsvr --replSet RS1 --port 27001 --bind_ip_all --keyFile /etc/secrets/mongodb-keyfile
    volumes:
      - ./mongodb-data-rs1:/data/db
      - ./secrets:/etc/secrets:ro

  mongodb-rs2:
    image: percona/percona-server-mongodb:8.0-multi
    container_name: mongodb-rs2
    ports:
      - "27002:27002"
    command: mongod --auth --shardsvr --replSet RS1 --port 27002 --bind_ip_all --keyFile /etc/secrets/mongodb-keyfile
    volumes:
      - ./mongodb-data-rs2:/data/db
      - ./secrets:/etc/secrets:ro

  mongodb-rs3:
    image: percona/percona-server-mongodb:8.0-multi
    container_name: mongodb-rs3
    ports:
      - "27003:27003"
    command: mongod --auth --shardsvr --replSet RS1 --port 27003 --bind_ip_all --keyFile /etc/secrets/mongodb-keyfile
    volumes:
      - ./mongodb-data-rs3:/data/db
      - ./secrets:/etc/secrets:ro

  mongodb-rs-init:
    image: percona/percona-server-mongodb:8.0-multi
    container_name: rs-init
    depends_on:
      - mongodb-rs1
      - mongodb-rs2
      - mongodb-rs3
    entrypoint: [ "sh", "-c", "until mongosh --host mongodb-rs1 --port 27001 --eval 'print(\"waited for connection\")'; do sleep 5; done && mongosh --host mongodb-rs1 --port 27001 --eval 'config={\"_id\":\"RS1\",\"members\":[{\"_id\":0,\"host\":\"mongodb-rs1:27001\"},{\"_id\":1,\"host\":\"mongodb-rs2:27002\"},{\"_id\":2,\"host\":\"mongodb-rs3:27003\"}]};rs.initiate(config);'" ]

  pmm-server:
    image: percona/pmm-server:3
    platform: "linux/amd64"
    container_name: pmm-server
    ports:
      - 8080:80
      - "443:8443"
    volumes:
      - ./pmm-data:/srv

  pmm-client:
    image: percona/pmm-client:3
    container_name: pmm-client
    depends_on:
      - mongodb-rs1
      - mongodb-rs2
      - mongodb-rs3
    ports:
      - 42001:42001
    environment:
      PMM_AGENT_SERVER_ADDRESS: pmm-server:8443
      PMM_AGENT_SERVER_USERNAME: admin
      PMM_AGENT_SERVER_PASSWORD: admin
      PMM_AGENT_SERVER_INSECURE_TLS: 1
      PMM_AGENT_CONFIG_FILE: config/pmm-agent.yaml
      PMM_AGENT_SETUP: 1
      PMM_AGENT_SETUP_FORCE: 1
      PMM_AGENT_PRERUN_SCRIPT: >
        pmm-admin status --wait=10s &&   pmm-admin config --server-insecure-tls --server-url=https://admin:admin@127.0.0.1:443 &&  pmm-admin add mongodb --username=pmm --password=pmm123@ --service-name=mongo_rs_1 --host=mongodb-rs1 --port=27001 --enable-all-collectors &&  pmm-admin add mongodb --username=pmm --password=pmm123@ --service-name=mongo_rs_2 --host=mongodb-rs2 --port=27002 --enable-all-collectors &&  pmm-admin add mongodb --username=pmm --password=pmm123@ --service-name=mongo_rs_3 --host=mongodb-rs3 --port=27003 --enable-all-collectors

  mongodb-app:
    build:
      context: .
      dockerfile: app.Dockerfile
    volumes:
      - ./app.py:/app/app.py
    command: python app.py
    ports:
      - 5000:5000
